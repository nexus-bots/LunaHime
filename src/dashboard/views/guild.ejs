<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= guild.name %> - LunaHime Dashboard</title>
    <link rel="stylesheet" href="/css/style.css">
    <link rel="stylesheet" href="/css/dashboard.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
</head>
<body>
    <div class="container">
        <header>
            <div class="logo">
                <img src="/img/logo.png" alt="LunaHime Logo">
                <h1>LunaHime</h1>
            </div>
            <nav>
                <ul>
                    <li><a href="/">Home</a></li>
                    <li><a href="/dashboard" class="active">Dashboard</a></li>
                    <li><a href="https://discord.com/api/oauth2/authorize?client_id=<%= client.user.id %>&permissions=8&scope=bot%20applications.commands" target="_blank">Invite</a></li>
                    <% if (user) { %>
                        <li class="user-profile">
                            <img src="https://cdn.discordapp.com/avatars/<%= user.id %>/<%= user.avatar %>.png" alt="<%= user.username %>">
                            <span><%= user.username %></span>
                            <a href="/auth/logout" class="logout-btn">Logout</a>
                        </li>
                    <% } else { %>
                        <li><a href="/auth/discord" class="login-btn">Login with Discord</a></li>
                    <% } %>
                </ul>
            </nav>
        </header>
        
        <main class="dashboard-main">
            <div class="guild-header">
                <% if (guild.icon) { %>
                    <img src="<%= guild.icon %>" alt="<%= guild.name %>">
                <% } else { %>
                    <div class="guild-icon-placeholder">
                        <%= guild.name.charAt(0) %>
                    </div>
                <% } %>
                <div class="guild-info">
                    <h2><%= guild.name %></h2>
                    <p><%= guild.memberCount %> members</p>
                </div>
            </div>
            
            <div class="dashboard-tabs">
                <div class="dashboard-tab active" data-tab="music">Music Player</div>
                <div class="dashboard-tab" data-tab="settings">Settings</div>
            </div>
            
            <div class="tab-content active" id="music-tab">
                <div class="music-player">
                    <div class="music-player-header">
                        <h3>Music Player</h3>
                        <% if (queue && queue.playing) { %>
                            <div class="music-status playing">Playing</div>
                        <% } else if (queue && queue.songs.length > 0) { %>
                            <div class="music-status paused">Paused</div>
                        <% } else { %>
                            <div class="music-status stopped">Stopped</div>
                        <% } %>
                    </div>
                    
                    <% if (queue && queue.songs.length > 0) { %>
                        <div class="now-playing">
                            <div class="now-playing-thumbnail">
                                <img src="<%= queue.songs[0].thumbnail %>" alt="<%= queue.songs[0].title %>">
                            </div>
                            <div class="now-playing-info">
                                <h4><%= queue.songs[0].title %></h4>
                                <p>By <%= queue.songs[0].author %></p>
                                <p>Duration: <%= queue.songs[0].duration %></p>
                            </div>
                        </div>
                        
                        <div class="music-controls">
                            <div class="control-btn" id="prev-btn">
                                <i class="fas fa-step-backward"></i>
                            </div>
                            <div class="control-btn play-pause" id="play-pause-btn">
                                <% if (queue.playing) { %>
                                    <i class="fas fa-pause"></i>
                                <% } else { %>
                                    <i class="fas fa-play"></i>
                                <% } %>
                            </div>
                            <div class="control-btn" id="skip-btn">
                                <i class="fas fa-step-forward"></i>
                            </div>
                            <div class="control-btn" id="stop-btn">
                                <i class="fas fa-stop"></i>
                            </div>
                        </div>
                        
                        <% if (queue.songs.length > 1) { %>
                            <div class="queue-list">
                                <% queue.songs.slice(1).forEach((song, index) => { %>
                                    <div class="queue-item">
                                        <div class="queue-item-number"><%= index + 1 %></div>
                                        <div class="queue-item-thumbnail">
                                            <img src="<%= song.thumbnail %>" alt="<%= song.title %>">
                                        </div>
                                        <div class="queue-item-info">
                                            <h5><%= song.title %></h5>
                                            <p><%= song.author %></p>
                                        </div>
                                        <div class="queue-item-duration"><%= song.duration %></div>
                                    </div>
                                <% }); %>
                            </div>
                        <% } else { %>
                            <div class="queue-empty">
                                <p>No songs in queue</p>
                            </div>
                        <% } %>
                    <% } else { %>
                        <div class="no-music">
                            <i class="fas fa-music"></i>
                            <h3>No Music Playing</h3>
                            <p>Use the play command in Discord to start playing music.</p>
                        </div>
                    <% } %>
                </div>
            </div>
            
            <div class="tab-content" id="settings-tab">
                <div class="settings-section">
                    <h3>Bot Settings</h3>
                    <form id="settings-form">
                        <div class="form-group">
                            <label for="prefix">Command Prefix</label>
                            <input type="text" id="prefix" name="prefix" placeholder="Default: -">
                        </div>
                        
                        <div class="form-group">
                            <label for="dj-role">DJ Role</label>
                            <select id="dj-role" name="djRole">
                                <option value="">Select a role</option>
                                <!-- Roles will be populated via JavaScript -->
                            </select>
                        </div>
                        
                        <div class="form-actions">
                            <button type="submit" class="btn primary-btn">Save Settings</button>
                        </div>
                    </form>
                </div>
            </div>
        </main>
        
        <footer>
            <div class="footer-content">
                <div class="footer-logo">
                    <img src="/img/logo.png" alt="LunaHime Logo">
                    <h3>LunaHime</h3>
                </div>
                <div class="footer-links">
                    <h3>Links</h3>
                    <ul>
                        <li><a href="/">Home</a></li>
                        <li><a href="/dashboard">Dashboard</a></li>
                        <li><a href="https://discord.com/api/oauth2/authorize?client_id=<%= client.user.id %>&permissions=8&scope=bot%20applications.commands" target="_blank">Invite</a></li>
                    </ul>
                </div>
                <div class="footer-social">
                    <h3>Connect</h3>
                    <div class="social-icons">
                        <a href="#" target="_blank"><i class="fab fa-discord"></i></a>
                        <a href="#" target="_blank"><i class="fab fa-github"></i></a>
                        <a href="#" target="_blank"><i class="fab fa-twitter"></i></a>
                    </div>
                </div>
            </div>
            <div class="footer-bottom">
                <p>&copy; 2023 LunaHime. All rights reserved.</p>
            </div>
        </footer>
    </div>
    
    <script>
        // Store guild ID for API calls
        const guildId = '<%= guild.id %>';
        
        // Tab switching
        document.querySelectorAll('.dashboard-tab').forEach(tab => {
            tab.addEventListener('click', () => {
                // Remove active class from all tabs
                document.querySelectorAll('.dashboard-tab').forEach(t => t.classList.remove('active'));
                document.querySelectorAll('.tab-content').forEach(c => c.classList.remove('active'));
                
                // Add active class to clicked tab
                tab.classList.add('active');
                document.getElementById(`${tab.dataset.tab}-tab`).classList.add('active');
            });
        });
        
        // Music controls
        const playPauseBtn = document.getElementById('play-pause-btn');
        const skipBtn = document.getElementById('skip-btn');
        const prevBtn = document.getElementById('prev-btn');
        const stopBtn = document.getElementById('stop-btn');
        
        if (playPauseBtn) {
            playPauseBtn.addEventListener('click', async () => {
                const icon = playPauseBtn.querySelector('i');
                const action = icon.classList.contains('fa-pause') ? 'pause' : 'resume';
                
                try {
                    const response = await fetch(`/api/guilds/${guildId}/music/${action}`, {
                        method: 'POST'
                    });
                    
                    if (response.ok) {
                        // Toggle icon
                        icon.classList.toggle('fa-pause');
                        icon.classList.toggle('fa-play');
                        
                        // Update status
                        const statusEl = document.querySelector('.music-status');
                        if (action === 'pause') {
                            statusEl.textContent = 'Paused';
                            statusEl.classList.remove('playing');
                            statusEl.classList.add('paused');
                        } else {
                            statusEl.textContent = 'Playing';
                            statusEl.classList.remove('paused');
                            statusEl.classList.add('playing');
                        }
                    }
                } catch (error) {
                    console.error('Error controlling music:', error);
                }
            });
        }
        
        if (skipBtn) {
            skipBtn.addEventListener('click', async () => {
                try {
                    await fetch(`/api/guilds/${guildId}/music/skip`, {
                        method: 'POST'
                    });
                    
                    // Refresh page after a short delay
                    setTimeout(() => {
                        location.reload();
                    }, 1000);
                } catch (error) {
                    console.error('Error skipping track:', error);
                }
            });
        }
        
        if (stopBtn) {
            stopBtn.addEventListener('click', async () => {
                try {
                    await fetch(`/api/guilds/${guildId}/music/stop`, {
                        method: 'POST'
                    });
                    
                    // Refresh page after a short delay
                    setTimeout(() => {
                        location.reload();
                    }, 1000);
                } catch (error) {
                    console.error('Error stopping music:', error);
                }
            });
        }
        
        // Settings form
        const settingsForm = document.getElementById('settings-form');
        
        if (settingsForm) {
            // Fetch current settings
            fetch(`/api/guilds/${guildId}/settings`)
                .then(response => response.json())
                .then(data => {
                    // Populate form
                    document.getElementById('prefix').value = data.prefix || '-';
                    
                    // Populate roles dropdown
                    const rolesSelect = document.getElementById('dj-role');
                    
                    data.roles.forEach(role => {
                        const option = document.createElement('option');
                        option.value = role.id;
                        option.textContent = role.name;
                        
                        if (role.id === data.djRole) {
                            option.selected = true;
                        }
                        
                        rolesSelect.appendChild(option);
                    });
                })
                .catch(error => {
                    console.error('Error fetching settings:', error);
                });
            
            // Handle form submission
            settingsForm.addEventListener('submit', async (e) => {
                e.preventDefault();
                
                const formData = new FormData(settingsForm);
                const settings = {
                    prefix: formData.get('prefix'),
                    djRole: formData.get('djRole')
                };
                
                try {
                    const response = await fetch(`/api/guilds/${guildId}/settings`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(settings)
                    });
                    
                    if (response.ok) {
                        alert('Settings saved successfully!');
                    } else {
                        alert('Error saving settings. Please try again.');
                    }
                } catch (error) {
                    console.error('Error saving settings:', error);
                    alert('Error saving settings. Please try again.');
                }
            });
        }
    </script>
</body>
</html>
